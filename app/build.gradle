apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.google.protobuf'

import java.util.regex.Pattern

ext {
    supportLibraryVersion = '25.4.0'
    grpcVersion = '1.4.0'
}

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "com.demo.pet.petapp"
        minSdkVersion 24
        targetSdkVersion 28
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags "-frtti -fexceptions"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix = '.debug'
            versionNameSuffix = '-debug'
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    productFlavors {
    }


    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.2'
        resolutionStrategy.force "com.android.support:support-annotations:$supportLibraryVersion"
    }

    task incrementVersionCode {
        def file = file("src/main/AndroidManifest.xml")
        def text = file.getText()

        // Update version code.
        def codePattern = Pattern.compile("android:versionCode=\"(\\d+)\"")
        def codeMatcher = codePattern.matcher(text)
        codeMatcher.find()
        def code = Integer.parseInt(codeMatcher.group(1))
        def newCode = code + 1
        def codeUpdatedText = codeMatcher.replaceAll("android:versionCode=\"" + newCode + "\"")

        // Update version name.
        def namePattern = Pattern.compile("android:versionName=\"(\\d+)\\.(\\d+)\\.(\\d+)-\\d+\"")
        def nameMatcher = namePattern.matcher(codeUpdatedText)
        nameMatcher.find()
        def major = Integer.parseInt(nameMatcher.group(1))
        def minor = Integer.parseInt(nameMatcher.group(2))
        def patch = Integer.parseInt(nameMatcher.group(3))
        def newName = "android:versionName=\"" + major + "." + minor + "." + patch + "-" + newCode + "\""
        def nameUpdatedText = nameMatcher.replaceAll(newName)

        file.write(nameUpdatedText)
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    tasks.whenTaskAdded { task ->
        if (task.name == "generateReleaseBuildConfig" || task.name == "generateDebugBuildConfig") {
            task.dependsOn("incrementVersionCode")
        }
    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.3.0'
    }
    plugins {
        javalite {
            artifact = "com.google.protobuf:protoc-gen-javalite:3.0.0"
        }
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                javalite {}
                grpc {
                    // Options added to --grpc_out
                    option 'lite'
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.61'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:2.0.0-beta4'
    implementation 'com.android.support:design:28.0.0'
    testImplementation 'junit:junit:4.13-rc-2'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation project(':pocketsphinx-aar')
    implementation project(':pocketsphinx-models')
    // gRPC
    implementation 'io.grpc:grpc-okhttp:1.26.0'
    implementation 'io.grpc:grpc-protobuf-lite:1.23.0'
    implementation 'io.grpc:grpc-stub:1.23.0'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    protobuf 'com.google.protobuf:protobuf-java:3.11.1'
    // OAuth2 for Google API
    implementation('com.google.auth:google-auth-library-oauth2-http:0.19.0') {
        exclude module: 'httpclient'
    }
    implementation 'com.squareup.okhttp3:okhttp:4.2.2'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.10.1'
}

task copySecretKey(type: Copy) {
    def File secretKey = file "$System.env.GOOGLE_APPLICATION_CREDENTIALS"
    from secretKey.getParent()
    include secretKey.getName()
    into 'src/main/res/raw'
    rename secretKey.getName(), "credential.json"
}
preBuild.dependsOn(copySecretKey)
